@model DatabaseAccess.StudentPromotTable

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>StudentPromotTable</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control", @id= "StudentID" })
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassID, "ClassID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ClassID", null, htmlAttributes: new { @class = "form-control", @id = "ClassID" })
                @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProgrameSessionID, "ProgrameSessionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProgrameSessionID", null, htmlAttributes: new { @class = "form-control", @id = "ProgrameSessionID" })
                @Html.ValidationMessageFor(model => model.ProgrameSessionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PromoteDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PromoteDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PromoteDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnnualFee, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AnnualFee, new { htmlAttributes = new { @class = "form-control", @id = "AnnualFee" } })
                @Html.ValidationMessageFor(model => model.AnnualFee, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSubmit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSubmit)
                    @Html.ValidationMessageFor(model => model.IsSubmit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionID, "SectionID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {
    $('#StudentID').change(function () {
        $('#ClassID').html('');
        var sid = ''; // Define or assign the appropriate value to sid
        $.ajax({
            url: '@Url.Action("GetPromotClsList", "StudentPromotTables")',
            type: 'GET',
            data: { sid: sid, selectedValue: $(this).val() }, // Properly pass variables
            dataType: 'json',
            success: function (response) {
                for (var i = 0; i < response.data.length; i++) {
                    // Use proper quoting for attribute values to avoid HTML injection
                    $('#ClassID').append("<option value='" + response.data[i].ClassID + "'>" + response.data[i].Name + "</option>");
                }
            },
            error: function () {
                // Handle errors here, e.g., show an error message to the user
                console.log('An error occurred during the AJAX request.');
            }
        });
    });

    $('#ProgrameSessionID').change(function () {
        $.ajax({
            url: '@Url.Action("GetAnnulFee", "StudentPromotTables")',
            type: 'GET',
            dataType: 'json',
            data: { sid: $(this).val() },
            success: function (response) {
                $('#AnnualFee').val(response.fees);
            },
            error: function () {
                // Handle errors here, e.g., show an error message to the user
                console.log('An error occurred during the AJAX request.');
            }
        });
    });
});

</script>